# This is a basic workflow to help you get started with Actions

name: Firebase function deploy

# Controls when the action will run. Triggers the workflow on push
# events but only for the master branch
on:
  push:
    branches: [ test/cleanup ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy_and_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3

    # Runs a single command using the runners shell
    # And of course we need to goto our functions folder to deploy
    - name: Install npm packages and write env
      run: |
        yarn install --frozen-lockfile
        echo "${{ secrets.ACTIONS_ENV_FILE }}" > ./packages/actions/.env
        echo "${{ secrets.BACKEND_ENV_FILE }}" > ./packages/backend/.env

    - name: write Firebase service account key
      id: create-json
      uses: jsdaniell/create-json@v1.2.1
      with:
          name: "serviceAccountKey.json"
          json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          dir: "./packages/backend/"

    - name: build packages
      run: yarn build
      env:
          NODE_OPTIONS: "--max_old_space_size=4096"

    # Deploying the functions to firebase
    - name:  Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
          args: deploy --only functions --project prod
      env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: packages/backend/

    - name: run test (unit & e2e)
      run: yarn test:ci-prod
      env:
          GOOGLE_APPLICATION_CREDENTIALS: ./packages/backend/serviceAccountKey.json